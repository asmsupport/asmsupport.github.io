<?xml version="1.0" encoding="UTF-8" standalone="yes"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="1613pt" style="width:1304px;height:1613px;" version="1.1" viewBox="0 0 1304 1613" width="1304pt"><defs><filter height="300%" id="f1" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#FFFFFF" filter="url(#f1)" height="1370.2109" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="280.5" y="137.1201"/><rect fill="#FFFFFF" filter="url(#f1)" height="269.5439" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="285.5" y="307.1553"/><rect fill="#FFFFFF" filter="url(#f1)" height="375.9387" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="285.5" y="658.5852"/><rect fill="#FFFFFF" filter="url(#f1)" height="402.8071" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="285.5" y="1073.5239"/><rect fill="#FFFFFF" filter="url(#f1)" height="92.0176" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="550.5" y="343.9097"/><rect fill="#FFFFFF" filter="url(#f1)" height="74.2632" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="550.5" y="738.2256"/><rect fill="#FFFFFF" filter="url(#f1)" height="74.2632" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="550.5" y="1110.2783"/><rect fill="#FFFFFF" filter="url(#f1)" height="109.772" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="728" y="466.9272"/><rect fill="#FFFFFF" filter="url(#f1)" height="191.0352" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="728" y="843.4888"/><rect fill="#FFFFFF" filter="url(#f1)" height="260.7896" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="728" y="1215.5415"/><rect fill="#FFFFFF" filter="url(#f1)" height="145.2808" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="949" y="875.2432"/><rect fill="#FFFFFF" filter="url(#f1)" height="215.0352" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="949" y="1247.2959"/><rect fill="#FFFFFF" filter="url(#f1)" height="109.772" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1175" y="1338.5591"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="90" x2="90" y1="86.1201" y2="1526.0854"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="285" x2="285" y1="86.1201" y2="1526.0854"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="555.5" x2="555.5" y1="86.1201" y2="1526.0854"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="732.5" x2="732.5" y1="86.1201" y2="1526.0854"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="954" x2="954" y1="86.1201" y2="1526.0854"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1180" x2="1180" y1="86.1201" y2="1526.0854"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="65" x="55" y="83.0439">Developer</text><ellipse cx="90.5" cy="10" fill="#FEFECE" filter="url(#f1)" rx="8" ry="8" style="stroke: #A80036; stroke-width: 2.0;"/><path d="M90.5,18 L90.5,45 M77.5,26 L103.5,26 M90.5,45 L77.5,60 M90.5,45 L103.5,60 " fill="#FEFECE" filter="url(#f1)" style="stroke: #A80036; stroke-width: 2.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="65" x="55" y="1540.9238">Developer</text><ellipse cx="90.5" cy="1554" fill="#FEFECE" filter="url(#f1)" rx="8" ry="8" style="stroke: #A80036; stroke-width: 2.0;"/><path d="M90.5,1562 L90.5,1589 M77.5,1570 L103.5,1570 M90.5,1589 L77.5,1604 M90.5,1589 L103.5,1604 " fill="#FEFECE" filter="url(#f1)" style="stroke: #A80036; stroke-width: 2.0;"/><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="93" x="237" y="48"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="79" x="244" y="71.0439">ClassBuilder</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="93" x="237" y="1524.8799"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="79" x="244" y="1547.9238">ClassBuilder</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="162" x="472.5" y="48"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="148" x="479.5" y="71.0439">FieldBuilder:Executable</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="162" x="472.5" y="1524.8799"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="148" x="479.5" y="1547.9238">FieldBuilder:Executable</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="165" x="648.5" y="48"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="151" x="655.5" y="71.0439">MethodBuild:Executable</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="165" x="648.5" y="1524.8799"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="151" x="655.5" y="1547.9238">MethodBuild:Executable</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="166" x="869" y="48"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="152" x="876" y="71.0439">MethodBody:Executable</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="166" x="869" y="1524.8799"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="152" x="876" y="1547.9238">MethodBody:Executable</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="196" x="1080" y="48"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="182" x="1087" y="71.0439">AbstractOperator:Executable</text><rect fill="#FEFECE" filter="url(#f1)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="196" x="1080" y="1524.8799"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="182" x="1087" y="1547.9238">AbstractOperator:Executable</text><rect fill="#FFFFFF" filter="url(#f1)" height="1370.2109" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="280.5" y="137.1201"/><rect fill="#FFFFFF" filter="url(#f1)" height="269.5439" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="285.5" y="307.1553"/><rect fill="#FFFFFF" filter="url(#f1)" height="375.9387" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="285.5" y="658.5852"/><rect fill="#FFFFFF" filter="url(#f1)" height="402.8071" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="285.5" y="1073.5239"/><rect fill="#FFFFFF" filter="url(#f1)" height="92.0176" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="550.5" y="343.9097"/><rect fill="#FFFFFF" filter="url(#f1)" height="74.2632" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="550.5" y="738.2256"/><rect fill="#FFFFFF" filter="url(#f1)" height="74.2632" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="550.5" y="1110.2783"/><rect fill="#FFFFFF" filter="url(#f1)" height="109.772" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="728" y="466.9272"/><rect fill="#FFFFFF" filter="url(#f1)" height="191.0352" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="728" y="843.4888"/><rect fill="#FFFFFF" filter="url(#f1)" height="260.7896" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="728" y="1215.5415"/><rect fill="#FFFFFF" filter="url(#f1)" height="145.2808" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="949" y="875.2432"/><rect fill="#FFFFFF" filter="url(#f1)" height="215.0352" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="949" y="1247.2959"/><rect fill="#FFFFFF" filter="url(#f1)" height="109.772" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1175" y="1338.5591"/><polygon fill="#A80036" points="268.5,133.1201,278.5,137.1201,268.5,141.1201,272.5,137.1201" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="90.5" x2="274.5" y1="137.1201" y2="137.1201"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="166" x="97.5" y="115.0181">1. 调用构建一个ClassBuilder</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="165" x="97.5" y="132.7725">实例并且调用实例的startup()</text><polygon fill="#FBFB77" filter="url(#f1)" points="95,150.6289,95,266.6289,314,266.6289,314,160.6289,304,150.6289,95,150.6289" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="304" x2="304" y1="150.6289" y2="160.6289"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="314" x2="304" y1="160.6289" y2="160.6289"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="167" x="101" y="170.5269">|在创建ClassBuilder的同时会</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="183" x="101" y="188.2813">|创建一个SemiClass对象，这个</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="172" x="101" y="206.0356">|对象将会记录当前所创建类的</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="179" x="101" y="223.79">|所有相关信息，这类是对Class</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="190" x="101" y="241.5444">|的一种抽象，最终构建一个class</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="198" x="101" y="259.2988">|文件就是通过它作为信息的载体。</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="290.5" x2="337.5" y1="294.9097" y2="294.9097"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="337.5" x2="337.5" y1="294.9097" y2="307.9097"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="296.5" x2="337.5" y1="307.9097" y2="307.9097"/><polygon fill="#A80036" points="306.5,303.9097,296.5,307.9097,306.5,311.9097,302.5,307.9097" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="302.5" y="290.0532">1.1 调用自己的create()</text><polygon fill="#A80036" points="538.5,339.9097,548.5,343.9097,538.5,347.9097,542.5,343.9097" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="295.5" x2="544.5" y1="343.9097" y2="343.9097"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="221" x="302.5" y="339.8076">1.1.1.a 调用所有FieldBuilder的create()</text><polygon fill="#FBFB77" filter="url(#f1)" points="437,357.6641,437,420.6641,669,420.6641,669,367.6641,659,357.6641,437,357.6641" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="659" x2="659" y1="357.6641" y2="367.6641"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="669" x2="659" y1="367.6641" y2="367.6641"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="211" x="443" y="377.562">|这一阶段将会把需要创建的域的元信</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="196" x="443" y="395.3164">|息加入到SemiClass，比如创建的</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="146" x="443" y="413.0708">|域的名字，修饰符等信息</text><polygon fill="#A80036" points="306.5,431.9272,296.5,435.9272,306.5,439.9272,302.5,435.9272" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="300.5" x2="554.5" y1="435.9272" y2="435.9272"/><polygon fill="#A80036" points="716,462.9272,726,466.9272,716,470.9272,720,466.9272" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="295.5" x2="722" y1="466.9272" y2="466.9272"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="236" x="302.5" y="462.8252">1.1.2.a 调用所有MethodBuilder的create()</text><polygon fill="#FBFB77" filter="url(#f1)" points="474,480.6816,474,561.6816,814,561.6816,814,490.6816,804,480.6816,474,480.6816" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="804" x2="804" y1="480.6816" y2="490.6816"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="814" x2="804" y1="490.6816" y2="490.6816"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="237" x="506" y="500.5796">|这一阶段将会把需要创建的方法的元信息</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="248" x="506" y="518.334">|加入到SemiClass，比如创建的域的名字，</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="263" x="506" y="536.0884">|修饰符等信息，还有方法体对象，方法体中包</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="185" x="506" y="553.8428">|括了构建什么样的字节码逻辑。</text><polygon fill="#A80036" points="301.5,572.6992,291.5,576.6992,301.5,580.6992,297.5,576.6992" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="295.5" x2="732" y1="576.6992" y2="576.6992"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="290.5" x2="337.5" y1="646.3396" y2="646.3396"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="337.5" x2="337.5" y1="646.3396" y2="659.3396"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="296.5" x2="337.5" y1="659.3396" y2="659.3396"/><polygon fill="#A80036" points="306.5,655.3396,296.5,659.3396,306.5,663.3396,302.5,659.3396" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="138" x="302.5" y="641.4832">1.2 调用自己的prepare()</text><polygon fill="#FBFB77" filter="url(#f1)" points="5,589.6992,5,705.6992,272,705.6992,272,599.6992,262,589.6992,5,589.6992" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="262" x2="262" y1="589.6992" y2="599.6992"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="272" x2="262" y1="599.6992" y2="599.6992"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="237" x="11" y="609.5972">|这一阶段将是字节码创建前的准备阶段。</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="206" x="11" y="627.3516">|这一阶段将构建出AbstractOperator</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="246" x="11" y="645.106">|的子类的对象，这个对象是对java语法的抽</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="232" x="11" y="662.8604">|象，比如KernelAdd对象对应的就是加法</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="236" x="11" y="680.6147">|操作，如果我们想生成 a + b,则需要构建</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="85" x="11" y="698.3691">|一个这个对象.</text><polygon fill="#A80036" points="538.5,734.2256,548.5,738.2256,538.5,742.2256,542.5,738.2256" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="295.5" x2="544.5" y1="738.2256" y2="738.2256"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="228" x="302.5" y="734.1235">1.2.1.a 调用所有FieldBuilder的prepare()</text><polygon fill="#FBFB77" filter="url(#f1)" points="477,751.98,477,796.98,630,796.98,630,761.98,620,751.98,477,751.98" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="620" x2="620" y1="751.98" y2="761.98"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="630" x2="620" y1="761.98" y2="761.98"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="132" x="483" y="771.8779">FieldBuilder的prepare()</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="94" x="483" y="789.6323">|将不做任何事情</text><polygon fill="#A80036" points="306.5,808.4888,296.5,812.4888,306.5,816.4888,302.5,812.4888" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="300.5" x2="554.5" y1="812.4888" y2="812.4888"/><polygon fill="#A80036" points="716,839.4888,726,843.4888,716,847.4888,720,843.4888" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="295.5" x2="722" y1="843.4888" y2="843.4888"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="243" x="302.5" y="839.3867">1.2.2.a 调用所有MethodBuilder的prepare()</text><polygon fill="#A80036" points="937,871.2432,947,875.2432,937,879.2432,941,875.2432" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="738" x2="943" y1="875.2432" y2="875.2432"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="184" x="745" y="871.1411">1.2.2.a.1 调用方法体的prepare()</text><polygon fill="#FBFB77" filter="url(#f1)" points="823,888.9976,823,1004.9976,1081,1004.9976,1081,898.9976,1071,888.9976,823,888.9976" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1071" x2="1071" y1="888.9976" y2="898.9976"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1081" x2="1071" y1="898.9976" y2="898.9976"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="237" x="829" y="908.8955">|每一个方法体都有个执行队列，用于存放</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="237" x="829" y="926.6499">|当前方法体的操作对象，这些对象可以将</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="224" x="829" y="944.4043">|所有操作转换成字节码。调用方法体的</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="189" x="829" y="962.1587">|prepare方法实际上就是创建这些</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="224" x="829" y="979.9131">|操作对象并且将其结构化的存储在执行</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="55" x="829" y="997.6675">|队列中。</text><polygon fill="#A80036" points="749,1016.5239,739,1020.5239,749,1024.5239,745,1020.5239" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="743" x2="953" y1="1020.5239" y2="1020.5239"/><polygon fill="#A80036" points="301.5,1030.5239,291.5,1034.5239,301.5,1038.5239,297.5,1034.5239" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="295.5" x2="732" y1="1034.5239" y2="1034.5239"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="290.5" x2="337.5" y1="1061.2783" y2="1061.2783"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="337.5" x2="337.5" y1="1061.2783" y2="1074.2783"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="296.5" x2="337.5" y1="1074.2783" y2="1074.2783"/><polygon fill="#A80036" points="306.5,1070.2783,296.5,1074.2783,306.5,1078.2783,302.5,1074.2783" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="141" x="302.5" y="1056.4219">1.3 调用自己的execute()</text><polygon fill="#FBFB77" filter="url(#f1)" points="26,1049.0239,26,1076.0239,271,1076.0239,271,1059.0239,261,1049.0239,26,1049.0239" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="261" x2="261" y1="1049.0239" y2="1059.0239"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="271" x2="261" y1="1059.0239" y2="1059.0239"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="224" x="32" y="1068.9219">|这一阶段将才开始真正构建字节码内容</text><polygon fill="#A80036" points="538.5,1106.2783,548.5,1110.2783,538.5,1114.2783,542.5,1110.2783" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="295.5" x2="544.5" y1="1110.2783" y2="1110.2783"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="231" x="302.5" y="1106.1763">1.3.1.a 调用所有FieldBuilder的execute()</text><polygon fill="#FBFB77" filter="url(#f1)" points="437,1124.0327,437,1169.0327,670,1169.0327,670,1134.0327,660,1124.0327,437,1124.0327" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="660" x2="660" y1="1124.0327" y2="1134.0327"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="670" x2="660" y1="1134.0327" y2="1134.0327"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="212" x="443" y="1143.9307">|将会调用ClassWriter的visitField方法</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="57" x="443" y="1161.6851">|创建Field</text><polygon fill="#A80036" points="306.5,1180.5415,296.5,1184.5415,306.5,1188.5415,302.5,1184.5415" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="300.5" x2="554.5" y1="1184.5415" y2="1184.5415"/><polygon fill="#A80036" points="716,1211.5415,726,1215.5415,716,1219.5415,720,1215.5415" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="295.5" x2="722" y1="1215.5415" y2="1215.5415"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="246" x="302.5" y="1211.4395">1.3.2.a 调用所有MethodBuilder的execute()</text><polygon fill="#A80036" points="937,1243.2959,947,1247.2959,937,1251.2959,941,1247.2959" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="738" x2="943" y1="1247.2959" y2="1247.2959"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="187" x="745" y="1243.1938">1.3.2.a.1 调用方法体的execute()</text><polygon fill="#FBFB77" filter="url(#f1)" points="855,1261.0503,855,1306.0503,1048,1306.0503,1048,1271.0503,1038,1261.0503,855,1261.0503" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1038" x2="1038" y1="1261.0503" y2="1271.0503"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1048" x2="1038" y1="1271.0503" y2="1271.0503"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="172" x="861" y="1280.9482">|依次调用执行队列中每个操作</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="122" x="861" y="1298.7026">|对象的execute()方法</text><polygon fill="#A80036" points="1163,1334.5591,1173,1338.5591,1163,1342.5591,1167,1338.5591" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="959" x2="1169" y1="1338.5591" y2="1338.5591"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="192" x="966" y="1334.457">调用AbstractOperator的execute()</text><polygon fill="#FBFB77" filter="url(#f1)" points="1060,1352.3135,1060,1433.3135,1295,1433.3135,1295,1362.3135,1285,1352.3135,1060,1352.3135" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1285" x2="1285" y1="1352.3135" y2="1362.3135"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1295" x2="1285" y1="1362.3135" y2="1362.3135"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="214" x="1066" y="1372.2114">|每个操作对象(AbstractOperator实例)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="195" x="1066" y="1389.9658">|的execute方法底层会调用ASM的</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="204" x="1066" y="1407.7202">|MethodVisitor的visitXXX方法，以此</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="164" x="1066" y="1425.4746">|最终完成class字节码的创建</text><polygon fill="#A80036" points="970,1444.3311,960,1448.3311,970,1452.3311,966,1448.3311" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="964" x2="1179" y1="1448.3311" y2="1448.3311"/><polygon fill="#A80036" points="749,1458.3311,739,1462.3311,749,1466.3311,745,1462.3311" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="743" x2="953" y1="1462.3311" y2="1462.3311"/><polygon fill="#A80036" points="301.5,1472.3311,291.5,1476.3311,301.5,1480.3311,297.5,1476.3311" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="295.5" x2="732" y1="1476.3311" y2="1476.3311"/><polygon fill="#A80036" points="101.5,1503.3311,91.5,1507.3311,101.5,1511.3311,97.5,1507.3311" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="95.5" x2="284.5" y1="1507.3311" y2="1507.3311"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="98" x="107.5" y="1503.229">返回生成的Class</text></g></svg>